<UserControl x:Class="Debricked.toolwindows.main.Controls.DG_Dependencies"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Debricked.toolwindows.main.Controls"
             xmlns:models="clr-namespace:Debricked.Models.DebrickedApi"
             xmlns:modelsroot="clr-namespace:Debricked.Models"
             xmlns:converter="clr-namespace:Debricked.Converters"
             xmlns:selectors="clr-namespace:Debricked.Selectors"
             xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"
             xmlns:shapes="clr-namespace:Debricked.Shapes"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <DataGrid x:Name="dgDeps" ItemsSource="{Binding Path=DataContext, RelativeSource={RelativeSource Self}}" PreviewMouseLeftButtonUp="dgDeps_PreviewMouseLeftButtonUp" CanUserSortColumns="True" CanUserReorderColumns="True" CanUserResizeColumns="True" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" 
              Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}" HeadersVisibility="Column" AlternationCount="2" PreviewMouseWheel="DgDeps_PreviewMouseWheel" ScrollViewer.CanContentScroll="False">
        <DataGrid.Resources>
            <converter:RowDetailsHeightConverter x:Key="rowDetailsHeightConverter"/>
            <converter:ScoreToSweepAngleConverter x:Key="sweepAngleConverter"/>
            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.GridHeadingTextKey}}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.GridHeadingBackgroundKey}}"/>
            </Style>
            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="MinHeight" Value="25"/>
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowBackgroundKey}}"/>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.GridHeadingBackgroundKey}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabMouseOverBackgroundGradientKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <HierarchicalDataTemplate  DataType="{x:Type modelsroot:Dependency}" x:Key="hdt">
                <TreeViewItem ItemsSource="{Binding Value.IndirectDependencies}" ItemTemplate="{StaticResource hdt}" Margin="-16,0,0,0" Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                    <TreeViewItem.Header>
                        <Label Content="{Binding Value.Name}" Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
				        Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                    </TreeViewItem.Header>
                </TreeViewItem>
            </HierarchicalDataTemplate>
            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="Padding" Value="2"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static vsshell:VsBrushes.GridHeadingTextKey}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="toggleButtonTemplate">
                <Grid Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}" HorizontalAlignment="Left" Background="{TemplateBinding Background}" Margin="3,0,0,0" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="14"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions></Grid.RowDefinitions>
                    <Rectangle Fill="Transparent" Grid.ColumnSpan="2"></Rectangle>
                    <Polygon x:Name="ArrowPoly" Points="0,0 16,0 8,8" Stroke="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}" Fill="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <ContentPresenter Margin="2,0,0,0" ContentSource="Content" Grid.Column="1" VerticalAlignment="Stretch"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Points" TargetName="ArrowPoly" Value="0,0 6,0 3,3"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter Property="Points" TargetName="ArrowPoly" Value="0,0 5,3 0,6"/>
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="summaryToggleButtonTemplate">
                <Grid Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}" Height="20" HorizontalAlignment="Left" Background="{TemplateBinding Background}" Margin="3,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="14"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="Transparent" Grid.ColumnSpan="2"></Rectangle>
                    <Polygon x:Name="SummaryArrowPoly" Points="0,0 16,0 8,8" Stroke="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}" Fill="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <ContentPresenter Margin="2,0,0,0" Grid.Column="2" Content="{Binding Category}">
                    </ContentPresenter>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Points" TargetName="SummaryArrowPoly" Value="0,0 6,0 3,3"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter Property="Points" TargetName="SummaryArrowPoly" Value="0,0 5,3 0,6"/>
                    </Trigger>

                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="ExpanderTemplate" TargetType="{x:Type Expander}">
                <DockPanel VerticalAlignment="Stretch">
                    <ToggleButton x:Name="ExpanderButton" Background="{TemplateBinding Background}" Template="{StaticResource toggleButtonTemplate}" DockPanel.Dock="Top" Content="{TemplateBinding Header}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>
                    <ContentPresenter Visibility="Visible" DockPanel.Dock="Bottom" Name="ExpanderContent"/>
                </DockPanel>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="True">
                        <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsExpanded" Value="False">
                        <Setter TargetName="ExpanderContent" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <ControlTemplate x:Key="SummaryExpanderTemplate" TargetType="{x:Type Expander}">
                <DockPanel Margin="0,0,0,0">
                    <Grid DockPanel.Dock="Top" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton Grid.Column="0" x:Name="SummaryExpanderButton" Background="{TemplateBinding Background}" Template="{StaticResource summaryToggleButtonTemplate}" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=DataContext}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" OverridesDefaultStyle="True"/>
                    </Grid>
                    <ContentPresenter Grid.Column="0" Margin="15,0,0,0" Visibility="Visible" DockPanel.Dock="Bottom" Name="SummaryExpanderContent"/>

                </DockPanel>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsExpanded" Value="True">
                        <Setter TargetName="SummaryExpanderContent" Property="Visibility" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsExpanded" Value="False">
                        <Setter TargetName="SummaryExpanderContent" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <TextDecorationCollection  x:Key="hyperLinkUnderline">
                <TextDecoration Location="Underline">
                    <TextDecoration.Pen>
                        <Pen Brush="LightBlue" />
                    </TextDecoration.Pen>
                </TextDecoration>
            </TextDecorationCollection>
        </DataGrid.Resources>
        <DataGrid.Columns>
            <DataGridTemplateColumn Width="30" SortDirection="Descending" SortMemberPath="PolicyStatus" x:Name="PolicyStatus">
                <DataGridTemplateColumn.Header>
                    <Label Content="Policy Status" FontWeight="Bold" ToolTip="Policy Status"/>
                </DataGridTemplateColumn.Header>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Ellipse Fill="{Binding PolicyStatusBrush}"  Height="10" Width="10" StrokeThickness="1" Stroke="Black" Margin="5,2,5,2">
                                <Ellipse.ToolTip>
                                    <ToolTip  Content="{Binding PolicyStatusTooltip}"/>
                                </Ellipse.ToolTip>
                            </Ellipse>
                        </StackPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn Binding="{Binding Name, Mode=OneWay}" Width="*">
                <DataGridTextColumn.Header>
                    <Label Content="Name" FontWeight="Bold" ToolTip="Name"/>
                </DataGridTextColumn.Header>
            </DataGridTextColumn>
            <DataGridTemplateColumn Width="70" SortDirection="Descending">
                <DataGridTemplateColumn.Header>
                    <Label Content="OSH Scores" FontWeight="Bold" ToolTip="OSH Scores"/>
                </DataGridTemplateColumn.Header>
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Ellipse Fill="{Binding SecurityScoreBrush}"  Height="10" Width="10" StrokeThickness="1" Stroke="Black" Margin="5,2,5,2">
                                <Ellipse.ToolTip>
                                    <ToolTip  Content="{Binding SecurityScore}" ContentStringFormat="{}Security Score: {0}"/>
                                </Ellipse.ToolTip>
                            </Ellipse>
                            <Ellipse Fill="{Binding ContributorsScoreBrush}"  Height="10" Width="10" StrokeThickness="1" Stroke="Black" Margin="5,2,5,2">
                                <Ellipse.ToolTip>
                                    <ToolTip  Content="{Binding ContributorsScore}" ContentStringFormat="{}Contributors Score: {0}"/>
                                </Ellipse.ToolTip>
                            </Ellipse>
                            <Ellipse Fill="{Binding PopularityScoreBrush}"  Height="10" Width="10" StrokeThickness="1" Stroke="Black" Margin="5,2,5,2">
                                <Ellipse.ToolTip>
                                    <ToolTip  Content="{Binding PopularityScore}" ContentStringFormat="{}Popularity Score: {0}"/>
                                </Ellipse.ToolTip>
                            </Ellipse>
                        </StackPanel>
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn Binding="{Binding TotalDirectVulnerabilities}" Width="25">
                <DataGridTextColumn.Header>
                    <Label Content="Direct Vulnerabilites" FontWeight="Bold" ToolTip="Direct Vulnerabilites"/>
                </DataGridTextColumn.Header>
            </DataGridTextColumn>
            <DataGridTextColumn Binding="{Binding TotalVulnerabilities}" Width="25">
                <DataGridTextColumn.Header>
                    <Label Content="Total Vulnerabilites" FontWeight="Bold" ToolTip="Total Vulnerabilites"/>
                </DataGridTextColumn.Header>
            </DataGridTextColumn>
        </DataGrid.Columns>
        <DataGrid.RowDetailsTemplate>
            <DataTemplate>
                <ScrollViewer HorizontalContentAlignment="Stretch" MaxHeight="{Binding Path=ActualHeight, Converter={StaticResource rowDetailsHeightConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}" MaxWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UIElement}}" CanContentScroll="True" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
                     Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}" 
                     BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                     Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="{Binding TriggeredConditionsHeight}"/>
                            <RowDefinition Height="{Binding VulnerabilitesHeight}"/>
                            <RowDefinition Height="{Binding LicensesHeight}"/>
                            <RowDefinition Height="{Binding IndirectDependenciesHeight}"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" Margin="5,0,0,0">
                            <Hyperlink NavigateUri="{Binding Link}" ToolTip="{Binding Link}" FontSize="12" TextDecorations="None" RequestNavigate="Hyperlink_RequestNavigate">
                            <TextBlock Text="View Dependency on Debricked">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="LightBlue"/>
                                            <Setter Property="TextDecorations" Value="None"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="TextDecorations" Value="{DynamicResource hyperLinkUnderline}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                            </TextBlock>
                            </Hyperlink>
                        </TextBlock>
                        <Expander Grid.Row="1" Header="Open Source Health" Template="{StaticResource ExpanderTemplate}" Margin="0,5,0,0"
                              BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                              Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                            <Grid Height="80">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="55"/>
                                    <RowDefinition Height="25"/>
                                </Grid.RowDefinitions>
                                <shapes:Arc Grid.Row="0" Grid.Column="0" Center="25,25" OverrideCenter="True" Stroke="{Binding SecurityScoreBrush}" StartAngle="270" SweepAngle="{Binding SecurityScore, Converter={StaticResource sweepAngleConverter}}" Radius="20" StrokeThickness="2"/>
                                <Label Grid.Row="0" Grid.Column="0" Content="{Binding SecurityScore}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                <Label Grid.Row="1" Grid.Column="0" Content="Security" HorizontalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                <shapes:Arc Grid.Row="0" Grid.Column="1" Center="25,25" OverrideCenter="True" Stroke="{Binding ContributorsScoreBrush}" StartAngle="270" SweepAngle="{Binding ContributorsScore, Converter={StaticResource sweepAngleConverter}}" Radius="20" StrokeThickness="2"/>
                                <Label Grid.Row="0" Grid.Column="1" Content="{Binding ContributorsScore}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                <Label Grid.Row="1" Grid.Column="1" Content="Contributors" HorizontalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                <shapes:Arc Grid.Row="0" Grid.Column="2" Center="25,25" OverrideCenter="True" Stroke="{Binding PopularityScoreBrush}" StartAngle="270" SweepAngle="{Binding PopularityScore, Converter={StaticResource sweepAngleConverter}}" Radius="20" StrokeThickness="2"/>
                                <Label Grid.Row="0" Grid.Column="2" Content="{Binding PopularityScore}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                <Label Grid.Row="1" Grid.Column="2" Content="Popularity" HorizontalAlignment="Center" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                            </Grid>
                        </Expander>
                        <Expander Grid.Row="2" Header="Introduced through" Template="{StaticResource ExpanderTemplate}" Margin="0,5,0,0"
                              BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                              Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                            <ItemsControl ItemsSource="{Binding IntroducedThroughFiles}" Name="icIntroducedThrough" Margin="10,0,0,0">
                                
                            </ItemsControl>
                        </Expander>
                        <Expander Grid.Row="3" Header="Policy Errors and Warnings" Template="{StaticResource ExpanderTemplate}" Margin="0,5,0,0" Visibility="{Binding TriggeredConditionsVisibility}"
                              BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                              Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                            <ItemsControl ItemsSource="{Binding TriggeredConditions}" Name="icErrors" Margin="10,0,0,0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Expander Grid.Row="0" Template="{StaticResource ExpanderTemplate}" Margin="0,5,0,0" IsExpanded="True"
                                          BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                                          Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                                          Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                                            <Expander.Header>
                                                <TextBlock TextWrapping="Wrap" Text="{Binding Key}" Margin="0,0,0,0" VerticalAlignment="Stretch" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                            </Expander.Header>
                                            <ItemsControl ItemsSource="{Binding Value}" Name="icTriggerdConditions" Margin="15,0,0,0">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition Height="Auto"/>
                                                            </Grid.RowDefinitions>
                                                            <Label Grid.Column="0" Grid.Row="0" Content="{Binding Key}" ContentStringFormat="{}Subject: {0}" />
                                                            <ItemsControl Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Value}" Name="icTriggeredConditionValues" Margin="15,0,0,0"/>
                                                        </Grid>
                                                        
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </Expander>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander>
                        <Expander Grid.Row="4" Header="Direct Vulnerabilities" Template="{StaticResource ExpanderTemplate}" Margin="0,5,0,0" Visibility="{Binding VulnerabilitiesVisibility}"
                              BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                              Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                            <ItemsControl ItemsSource="{Binding Vulnerabilities}" Name="icVulns" Margin="10,0,0,0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Value.CveId}"
                                          Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                                          Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander>
                        <Expander Grid.Row="5" Header="Licenses" Template="{StaticResource ExpanderTemplate}" Margin="0,5,0,0" Visibility="{Binding LicensesVisibility}"
                              BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                              Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                            <ItemsControl ItemsSource="{Binding LicenseNames}" Name="icLicenseNames" Margin="10,0,0,0">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}"
                                          Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                                          Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander>
                        <Expander Grid.Row="6" Header="Indirect Dependencies" Template="{StaticResource ExpanderTemplate}" Margin="0,5,0,0" Visibility="{Binding IndirectDependenciesVisibility}"
                              BorderBrush="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabBorderKey}}" 
                              Background="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabGradientKey}}"
                              Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}">
                            <ItemsControl ItemsSource="{Binding IndirectDependencies}" Name="icIndirectDependecneis">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <Label DockPanel.Dock="Left" Content="{Binding Value.Name}" HorizontalAlignment="Left" Margin="5,0,0,0" Width="auto" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" HorizontalAlignment="Right">
                                                <Ellipse Fill="{Binding Value.SecurityScoreBrush}"  Height="10" Width="10" StrokeThickness="1" Stroke="Black" Margin="5,2,5,2">
                                                    <Ellipse.ToolTip>
                                                        <ToolTip  Content="{Binding Value.SecurityScore}" ContentStringFormat="{}Security Score: {0}"/>
                                                    </Ellipse.ToolTip>
                                                </Ellipse>
                                                <Ellipse Fill="{Binding Value.ContributorsScoreBrush}"  Height="10" Width="10" StrokeThickness="1" Stroke="Black" Margin="5,2,5,2">
                                                    <Ellipse.ToolTip>
                                                        <ToolTip  Content="{Binding Value.ContributorsScore}" ContentStringFormat="{}Contributors Score: {0}"/>
                                                    </Ellipse.ToolTip>
                                                </Ellipse>
                                                <Ellipse Fill="{Binding Value.PopularityScoreBrush}"  Height="10" Width="10" StrokeThickness="1" Stroke="Black" Margin="5,2,5,2">
                                                    <Ellipse.ToolTip>
                                                        <ToolTip  Content="{Binding Value.PopularityScore}" ContentStringFormat="{}Popularity Score: {0}"/>
                                                    </Ellipse.ToolTip>
                                                </Ellipse>
                                                <Label Content="{Binding Value.TotalDirectVulnerabilities}"  Width="25" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                                <Label Content="{Binding Value.TotalVulnerabilities}"  Width="25" Foreground="{DynamicResource {x:Static vsshell:VsBrushes.ToolWindowTabTextKey}}"/>
                                            </StackPanel>
                                        </DockPanel>
                                        
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Expander>
                    </Grid>
                </ScrollViewer>
            </DataTemplate>
        </DataGrid.RowDetailsTemplate>
    </DataGrid>
</UserControl>